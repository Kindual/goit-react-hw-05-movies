{"version":3,"file":"static/js/186.a522f0a9.chunk.js","mappings":"+SAGMA,EAAM,mCACNC,EAAaC,EAAAA,EAAAA,OAAa,CAC5BC,QAAS,kCAMN,SAAeC,IAAtB,+B,aAAO,O,oBAAA,oGACoBH,EAAWI,IAAX,oCAA4CL,IADhE,cACGM,EADH,yBAEIA,EAASC,KAAKC,SAFlB,kEAQA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAAyBC,GAAzB,4FAAgCC,EAAhC,+BAAuC,EAAvC,SACoBV,EAAWI,IAAX,+BAAuCL,EAAvC,gCAAkEW,EAAlE,kBAAgFD,EAAhF,yBADpB,cACGJ,EADH,yBAEIA,EAASC,MAFb,mEASA,SAAeK,EAAtB,kC,aAAO,O,oBAAA,WAAwBC,GAAxB,uFACoBZ,EAAWI,IAAX,gBAAwBQ,EAAxB,oBAA4Cb,EAA5C,oBADpB,cACGM,EADH,yBAEIA,GAFJ,kEAQA,SAAeQ,EAAtB,kC,aAAO,O,oBAAA,WAA+BD,GAA/B,uFACoBZ,EAAWI,IAAX,gBAAwBQ,EAAxB,4BAAoDb,EAApD,oBADpB,cACGM,EADH,yBAEIA,EAASC,KAAKQ,MAFlB,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BH,GAA9B,4FAAwCF,EAAxC,+BAA+C,EAA/C,SACoBV,EAAWI,IAAX,gBAAwBQ,EAAxB,4BAAoDb,EAApD,gCAA+EW,IADnG,cACGL,EADH,yBAEIA,EAASC,KAAKC,SAFlB,mE,+ICxCA,SAASS,IACZ,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAYR,OAVAE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,mCAAG,qGACSR,EAAAA,EAAAA,IAAeK,GADxB,OACRf,EADQ,OAEdc,EAAWd,GAFG,2CAAH,qDAKfkB,IAAYC,MAAMC,QAAQC,MAE7B,GAAE,CAACN,IAGAF,EAAQS,OAAS,GACZ,0BACG,wBACKT,EAAQU,KAAI,SAAAC,GAAM,OACf,2BACI,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFNF,EAAOG,GADD,QAH/B,YAaP,CAED,W","sources":["Api/Api.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["// import React from 'react'\nimport axios from 'axios'\n\nconst KEY = '60b5bf446116d1216ef8df748d38dc14';\nconst axiosMovie = axios.create({\n    baseURL: 'https://api.themoviedb.org/3/'\n})\n\n// popular\n// https://api.themoviedb.org/3/trending/all/day?api_key=<<api_key>>\n\nexport async function getTrending() {\n    const response = await axiosMovie.get(`/trending/all/day?api_key=${KEY}`);\n    return response.data.results;\n  }\n\n// search movies\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false \n\nexport async function getMovies(query, page = 1) {\n    const response = await axiosMovie.get(`search/movie?api_key=${KEY}&language=en-US&page=${page}&query=${query}&include_adult=false`);\n    return response.data\n}\n\n\n// movie details\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US \n\nexport async function getMovie(movie_id) {\n    const response = await axiosMovie.get(`movie/${movie_id}?api_key=${KEY}&language=en-US`);\n    return response\n}\n\n// credits\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n\nexport async function getMovieCredits(movie_id) {\n    const response = await axiosMovie.get(`movie/${movie_id}/credits?api_key=${KEY}&language=en-US`);\n    return response.data.cast\n}\n\n// reviews\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n\nexport async function getMovieReview(movie_id, page = 1) {\n    const response = await axiosMovie.get(`movie/${movie_id}/reviews?api_key=${KEY}&language=en-US&page=${page}`);\n    return response.data.results\n}\n\n","import { getMovieReview } from 'Api/Api';\nimport React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom';\n\nexport function Reviews() {\n    const [reviews, setReviews] = useState([]);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const response = await getMovieReview(movieId);\n            setReviews(response)\n        }\n\n        fetchData().catch(console.error)\n\n    }, [movieId]);\n\n    return (\n        reviews.length > 1 ?\n            (<div>\n                <ul>\n                    {reviews.map(review =>\n                        <li key={review.id}>\n                            <p>Author: {review.author}</p>\n                            <p>{review.content}</p>\n                        </li>\n                    )}\n                </ul>\n            </div>)\n        : `No reviews`\n    )\n}\n\nexport default Reviews;"],"names":["KEY","axiosMovie","axios","baseURL","getTrending","get","response","data","results","getMovies","query","page","getMovie","movie_id","getMovieCredits","cast","getMovieReview","Reviews","useState","reviews","setReviews","movieId","useParams","useEffect","fetchData","catch","console","error","length","map","review","author","content","id"],"sourceRoot":""}